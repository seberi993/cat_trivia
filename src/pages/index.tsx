import { type NextPage } from "next";
import Head from "next/head";
import getTriviaFromAPI from "./api/getTriviaFromAPI";
import { useState } from "react";
import Image from "next/image";
import getCatFromAPI from "./api/getCatFromAPI";
import getFactFromAPI from "./api/getFactFromAPI";

/*
AVAILABLE CATEGORIES FOR TRIVIA

artliterature
language
sciencenature
general
fooddrink
peopleplaces
geography
historyholidays
entertainment
toysgames
music
mathematics
religionmythology
sportsleisure

*/
const Home: NextPage = () => {
  const [question, setQuestion] = useState("Click the button");
  const [correctAnswer, setCorrectAnswer] = useState("");
  const [firstTry, setFirstTry] = useState(true);
  const [isWinning, userHasWon] = useState(false);
  const [visibility, setVisibility] = useState(false);
  const [cat, setCat] = useState({});
  const [inputVisibility, setInputVisibility] = useState(false);
  const [fact, setFact] = useState("");
  const [score, setPlayerScore] = useState(0);
  const [userHint, setHint] = useState("");


  let playerScore = 0;

  const clickHandler = async () => {
    setHint("");
    const data = await getTriviaFromAPI();
    const cat = await getCatFromAPI();
    const myFact = await getFactFromAPI();
    setFact(myFact);
    console.log("!CAT", cat);
    setCat(cat);
    setQuestion(data[0].question);
    setCorrectAnswer(data[0].answer);
    setVisibility(false);
    userHasWon(false);
    setInputVisibility(true);
  };

  const answerHandler = async () => {
    setFirstTry(true);
    playerScore = score;
    console.log("Checking answers...");
    const userInput = document.getElementById(
      "fname"
    ) as HTMLInputElement | null;
    const value = userInput?.value;
    console.log("The correct answer was [" + correctAnswer + "]");
    if (correctAnswer.toLowerCase() === value?.toLowerCase()) {
      if (firstTry) {
        playerScore++;
      }
      userHasWon(true);
      setVisibility(false);
      setInputVisibility(false);
      setPlayerScore(playerScore);
    }
  };
  const showCat = () => {
    setVisibility(true);
    userHasWon(false);
  };

  let nrOfLetters = 0;
  const showHint = () => {
    const first = correctAnswer.charAt(nrOfLetters);
    nrOfLetters++;
    setHint(first.toString());
  };

  return (
    <>
      <Head>
        <title>cats cats cats cats cats cats cats cats cats</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="container mx-auto min-h-screen min-w-screen bg-gradient-to-b from-indigo-500 via-purple-500 to-pink-500">
        <p className="inline-flex items-center rounded bg-blue-100 p-2 text-xl font-semibold text-blue-800 dark:bg-blue-200 dark:text-blue-800">
          {score}
        </p>
        <div className="min-h-fit">
          {inputVisibility ? (
            <div>
              <h3 className="text-xl font-medium text-gray-900"> {question}</h3>
              <p>
                <div> {userHint}</div>
              </p>
            </div>
          ) : (
            <div></div>
          )}

          {inputVisibility ? (
            <div>
              <input
                className="block w-100 rounded-lg border border-gray-300 bg-gray-50 p-2.5 text-sm text-gray-900 focus:border-blue-500 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 dark:focus:border-blue-500 dark:focus:ring-blue-500"
                type="text"
                id="fname"
                name="fname"
              ></input>
              <button
                className="rounded-full bg-blue-400 py-2 px-4 font-bold text-white hover:bg-blue-700"
                onClick={answerHandler}
              >
                Submit
              </button>{" "}
              <button
                className="rounded-full bg-blue-400 py-2 px-4 font-bold text-white hover:bg-blue-700"
                onClick={showHint}
              >
                Get Hint
              </button>
            </div>
          ) : (
            <div></div>
          )}
          <div className="myBody">
            {visibility ? (
              <Image
                className="cat_pic"
                src={cat.props.data[0].url}
                alt=""
                width={cat.props.data[0].width}
                height={cat.props.data[0].height}
              ></Image>
            ) : (
              <div></div>
            )}
            {isWinning ? (
              <div>
                <p>Thats right! Congratulations, have a cat.</p>
                <button
                  className="rounded-full bg-blue-400 py-2 px-4 font-bold text-white hover:bg-blue-700"
                  onClick={showCat}
                >
                  SHOW CAT
                </button>
              </div>
            ) : (
              <div>
                <button
                  className="rounded-full bg-blue-400 py-2 px-4 font-bold text-white hover:bg-blue-700"
                  onClick={clickHandler}
                >
                  Next Question
                </button>
              </div>
            )}
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
